# Default values for imjoy-app-engine.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1
acmeEmail: "${EMAIL}"
certSecretName: hypha-tls
hyphaHostName: https://hypha.${HOSTNAME}
s3ConsoleHostName: https://hs3c.${HOSTNAME}
s3_endpoint_url_public: https://hs3.${HOSTNAME}
auth0_audience: https://imjoy.eu.auth0.com/api/v2/
auth0_domain: imjoy.eu.auth0.com
jwt_secret: "${JWT_SECRET}"

# securityContext:
#   runAsNonRoot: true
#   enabled: true
#   runAsUser: 1000 # Run as non-root user
#   runAsGroup: 1000 # Run with the same group
#   fsGroup: 1000 # File system group should also be non-root
#   fsGroupChangePolicy: "OnRootMismatch" # Set the fsGroup change policy
#   capabilities:
#     drop:
#     - ALL # Drop all capabilities
#   allowPrivilegeEscalation: false # Do not allow privilege escalation
#   seccompProfile:
#     type: RuntimeDefault

image:
  repository: ghcr.io/amun-ai/hypha
  pullPolicy: IfNotPresent
  tag: "0.15.36"

triton_url: "http://tritoninferenceserver"

service:
  type: ClusterIP
  port: 80
  annotations: {}

ingress:
  enabled: true
  className: nginx
  path: /
  hosts:
  - hypha.${HOSTNAME}
  annotations:
    kubernetes.io/tls-acme: "true"
    cert-manager.k8s.io/acme-challenge-type: http01
    cert-manager.io/cluster-issuer: letsencrypt
    certmanager.k8s.io/acme-http01-edit-in-place: "true"
  tls:
  - secretName: tls-secret
    hosts:
    - hypha.${HOSTNAME}

redis:
  fullnameOverride: "redis"
  enabled: true
  global:
    redis:
      password: "admin"
minio:
  fullnameOverride: "minio"
  enabled: true
  auth:
    rootUser: "${S3_ACCESS_KEY}"
    rootPassword: "${S3_SECRET_KEY}"

  apiIngress:
    enabled: true
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: letsencrypt
      certmanager.k8s.io/acme-http01-edit-in-place: "true"
    path: /
    hosts:
    - s3.${HOSTNAME}

  consoleIngress:
    enabled: true
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: letsencrypt
    hosts:
    - s3c.${HOSTNAME}
    tls:
    - secretName: s3c-minio
      hosts:
      - s3c.${HOSTNAME}
  persistence:
    size: 64Gi

tritoninferenceserver-hypha:
  enabled: true
  fullnameOverride: "tritoninferenceserver"
  replicaCount: 2
  livenessProbe:
    initialDelaySeconds: 60
    periodSeconds: 60
    timeoutSeconds: 5
    successThreshold: 1
    # Try for 30 mins before giving up, bmz is slow to start
    failureThreshold: 30
  volumes:
  - emptyDir:
      medium: Memory
    name: dshm
  - ephemeral:
      volumeClaimTemplate:
        spec:
          accessModes:
          - ReadWriteOnce
          resources:
            requests:
              storage: 64Gi
          storageClassName: standard-rwo
          volumeMode: Filesystem
    name: triton-cache
  # volumeMounts:
  # - mountPath: /dev/shm
  #   name: dshm
  # - mountPath: /opt/tritonserver/caches
  #   name: triton-cache
  #   subPath: caches
  # - mountPath: /model-repository
  #   name: triton-cache
  #   subPath: model-repository
  # - mountPath: /model-snapshots
  #   name: triton-cache
  #   subPath: model-snapshots
  # - mountPath: /tmp
  #   name: triton-cache
  image:
    # imageName: ghcr.io/imjoy-team/triton:22.04-py3
    pullPolicy: IfNotPresent
    modelRepository: s3://minio:9000/model-repository
    modelStore: /model-repository
    modelSnapshotsPath: /model-snapshots
    env:
    - name: TF_FORCE_GPU_ALLOW_GROWTH
      value: "true"
    - name: AWS_ACCESS_KEY_ID
      value: "${S3_ACCESS_KEY}"
    - name: AWS_SECRET_ACCESS_KEY
      value: "${S3_SECRET_KEY}"
    - name: AWS_REGION
      value: "us-east-1"
    - name: S3_ENDPOINT
      value: "${S3_ENDPOINT_URL}"
    - name: S3_USE_HTTPS
      value: "0"
  resources:
    requests:
      memory: "32Gi"
      cpu: "8"
    limits:
      memory: "32Gi"
      cpu: "16"
