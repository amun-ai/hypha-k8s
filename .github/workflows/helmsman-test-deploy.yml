name: test-deploy
on:
  push:
  workflow_call:
  
env:
  JWT_SECRET: ${{secrets.JWT_SECRET}}
  S3_ACCESS_KEY: ${{secrets.JWT_SECRET}}
  S3_SECRET_KEY: ${{secrets.S3_SECRET_KEY}}
  MINIO_ROOTUSER: ${{secrets.MINIO_ROOTUSER}}
  MINIO_ROOTPASSWORD: ${{secrets.MINIO_ROOTPASSWORD}}
  KUBE_CONFIG: ${{secrets.KUBE_CONFIG}}
  KUBECONFIG: .kube/config

jobs:
  test-deploy:
    name: test-deploy
    # image: andrius/sshuttle
    # runs-on: ubuntu-latest
    runs-on: [self-hosted,denbi,ubuntu-latest]
    # container:
      # image: ubuntu:20.04
      # image: nektos/act-environments-ubuntu:18.04
      # image: praqma/helmsman:v3.8.1-helm-v3.7.2
    steps:
    # - run: sleep 5
    - name: Install Helmsman
      uses: giantswarm/install-binary-action@master
      with:
        binary: "helmsman"
        version: "3.8.1"
        download_url: "https://github.com/Praqma/helmsman/releases/download/v${version}/helmsman_${version}_linux_amd64.tar.gz"
        tarball_binary_path: "${binary}"
        smoke_test: "${binary} -v"
    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.7.1
    - uses: actions/checkout@master
    # - run: echo "${{secrets.KUBE_CONFIG}}" | base64 --decode >> "$KUBECONFIG"
    - run: mkdir -p .kube
    # - name: Setting up kubeconfig online
      # if: ${{ !env.ACT }}
      # run: echo "${{secrets.KUBE_CONFIG}}" >> .kube/config
    # - run: sleep 10000
    # - name: Install deps
      # run: apk add --update coreutils
    - name: Setting up kubeconfig - offline
      env:
        KUBE_CONFIG: ${{secrets.KUBE_CONFIG}}
      run: 'echo "$KUBE_CONFIG" | base64 --decode >> .kube/config'
    - name: Checking secret
      run: echo $KUBE_CONFIG
    - uses: azure/setup-kubectl@v3
    - name: Get contexts
      run: kubectl config get-contexts   
    - name: Test Kube connection
      run: kubectl get node  -o wide
    # - name: Install helm
    #   run: |
    #     curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    #     chmod 700 get_helm.sh
    #     ./get_helm.sh
    - name: test helm
      run: helm version
    - name: test helmsman 
      run: helmsman  -v
    - name: "make dev.dry"
      run: helmsman --debug --group dev -f helmsman.yaml --subst-env-values --dry-run