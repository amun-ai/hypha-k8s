

name: remote ssh command
on:
  push:
    branches:
      - main
      - master
  pull_request: ~


env:
  JWT_SECRET: ${{secrets.JWT_SECRET}}
  S3_ACCESS_KEY: ${{secrets.JWT_SECRET}}
  S3_SECRET_KEY: ${{secrets.S3_SECRET_KEY}}
  MINIO_ROOTUSER: ${{secrets.MINIO_ROOTUSER}}
  MINIO_ROOTPASSWORD: ${{secrets.MINIO_ROOTPASSWORD}}
  KUBECONFIG: kube_config
jobs:
  
  build:
    name: deploy
    # image: andrius/sshuttle
    # runs-on: ubuntu-latest
    runs-on: [self-hosted,denbi]
    steps:
    - uses: actions/checkout@master
    # - uses: engineerd/setup-kind@v0.5.0
    # - name: Testing
    #   run: |
    #     kubectl cluster-info
    #     kubectl get pods -n kube-system
    #     echo "current-context:" $(kubectl config current-context)
    #     echo "environment-kubeconfig:" ${KUBECONFIG}
    #   with:
    #     path: main
    # - name: Print Key
      # run: echo $SSH_KEY
    # - name: Install SSH key
    #   uses: shimataro/ssh-key-action@v2
    #   with:
    #     key: ${{ secrets.SSH_KEY }}
    - name: "Write ssh key"
      run: echo "${{secrets.SSH_KEY}}" | base64 --decode > id_rsa
    - name: "Write kube config"
      run: echo "${{secrets.KUBE_CONFIG}}" | base64 --decode > $KUBECONFIG
    # - name: "Check key"
      # run: cat id_rsa
    - name: "Key permissions"
      run: chmod 600 id_rsa
    # Needed for running on real github actions, quick fix for now
    # - name: executing remote ssh commands using password
    #   run: sudo apt-get update && sudo apt-get -y install sshuttle iputils-ping nmap iptables curl tar ssh telnet netcat
    - name: test ssh proxy
      run: ssh -vvv -i id_rsa -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -fNL 30163:172.16.114.199:30163 ctr26@denbi-jumphost-01.bihealth.org
    # - name: "check port"
    #   run: nc -vz 127.0.0.1 30163
    # - uses: azure/setup-kubectl@v3
      # with:
        # version: '<version>' # default is latest stable
      # id: install
    # - uses: actions-hub/kubectl@master
    #   env:
    #     KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
    #     KUBE_CONTEXT: denbi
    #   with:
    #     args: get node  -o wide
    # - name: KinD (Kubernetes in Docker) Action
      # uses: engineerd/setup-kind@v0.5.0
    # - name: Testing
    #   run: |
    #     kubectl cluster-info
    #     kubectl get pods -n kube-system
    #     echo "current-context:" $(kubectl config current-context)
    #     echo "environment-kubeconfig:" ${KUBECONFIG}
    # - name: kubectl
    #   run: kubectl get pods -A
    # - run: sudo apt-get update && sudo apt-get install iptables -y
    # - uses: WyriHaximus/github-action-helm3@v2
    - name: Install Helmsman
      run: 'wget -c https://github.com/Praqma/helmsman/releases/download/v3.8.1/helmsman_3.8.1_linux_amd64.tar.gz -O - | tar -xz -C /usr/local/bin/'
      # - run: which helmsman
      # - run: ls /usr/local/bin/
    - name: Install Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.7.1
    - name: Install Kubectl
      uses: azure/setup-kubectl@v2.0
    - name: Test Kube connection
      run: kubectl get node  -o wide
    # - uses: actions/setup-node@v2
      # - uses: actions/setup-python@v2
    - name: helm-diff
      run: helm plugin install https://github.com/databus23/helm-diff
      # name: "More"
    - name: test helm
      run: helm version
    - name: test helmsman 
      run: helmsman  -v
    - name: "make staging.dry"
      run: make staging.dry
    # - name: "test kubectl"
    #   run: kubectl get node  -o wide
    # # - name: "Ping server"
    # #   run: ping denbi-jumphost-01.bihealth.org 
    # - name: Check ssh port open 
    #   run: nmap -sT -Pn -p 22 denbi-jumphost-01.bihealth.org  | egrep 'open\s+ssh'
      # run: ssh -v -i id_rsa -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -q ctr26@denbi-jumphost-01.bihealth.org exit
      # run: ssh -v -i id_rsa -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o PubkeyAuthentication=no -o PasswordAuthentication=no -o KbdInteractiveAuthentication=no -o ChallengeResponseAuthentication=no ctr26@denbi-jumphost-01.bihealth.org 2>&1 | grep "Permission denied"
    # - name: executing remote ssh commands using password
    #   run: sshuttle --version
    # - name: "VPN"
    #   run: sudo sshuttle -NHr ctr26@denbi-jumphost-01.bihealth.org 0/0 --ssh-cmd 'ssh -i id_rsa -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
    # - name: "VPN"
    # #   run: ping 7flgxdmwmz.kubermatic.k.denbi.bihealth.org
    #   with:
    #     host: ${{ secrets.SSH_HOST }}
    #     username: ${{ secrets.SSH_USERNAME }}
    #     password: ""
    #     debug: true
    #     port: ${{ secrets.SSH_PORT }}
    #     key: ${{ secrets.SSH_KEY }}
    #     script: whoami
      # Runs a single command using the runners shell
    # - name: executing remote ssh commands using password
    #   uses: appleboy/ssh-action@master
    #   with:
    #     proxy_host: denbi-jumphost-01.bihealth.org
    #     proxy_username: ctr26
    #     proxy_password: ""
    #     debug: true
    #     proxy_port: 22
    #     proxy_key: $SSH_KEY
    #     script: whoami
    # - name: "1"
    #   run: 
    #     latest=$(curl --silent "https://api.github.com/repos/little-angry-clouds/kubectl-ssh-proxy/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
    # - name: "2"
    #   run: 
    #     curl --silent https://github.com/little-angry-clouds/kubectl-ssh-proxy/releases/download/$latest/kubectl-ssh-proxy-linux-386.tar.gz -O -L
    # - name: "3"
    #   run:
    #     tar xf kubectl-ssh-proxy-linux*.tar.gz
    # - name: "4"
    #   run: 
    #     sudo mv bin/kubectl-ssh_proxy* /usr/local/bin/kubectl-ssh_proxy
    # - name: "5"
    #   run: 
    #     sudo mv bin/kube-ssh-proxy* /usr/local/bin/kube-ssh-proxy-ssh-bin